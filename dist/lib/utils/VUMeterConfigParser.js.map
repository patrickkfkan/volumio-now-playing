{"version":3,"file":"VUMeterConfigParser.js","sourceRoot":"","sources":["../../../src/lib/utils/VUMeterConfigParser.ts"],"names":[],"mappings":"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","sourcesContent":["import np from '../NowPlayingContext';\nimport ConfigParser from 'configparser';\nimport { VUMeter, VUMeterBase, VUMeterCircularBase, VUMeterCircularStereo, VUMeterConfig, VUMeterExtended, VUMeterLinear, VUMeterPlayInfoTextElement } from 'now-playing-common';\nimport { dirExists, fileExists, getPluginInfo } from './System';\nimport { VU_METER_TEMPLATE_PATH } from './VUMeterTemplateMonitor';\n\nconst DEFAULT_FONTS = {\n  light: 'Lato-Light.ttf',\n  regular: 'Lato-Regular.ttf',\n  bold: 'Lato-Bold.ttf'\n};\n\nexport default class VUMeterConfigParser {\n\n  static getConfig(template: string): VUMeterConfig {\n    const appUrl = getPluginInfo().appUrl;\n    const templateUrl = `${appUrl}/vumeter/${template}`;\n    try {\n      const templateDir = `${VU_METER_TEMPLATE_PATH}/${template}`;\n      const configPath = `${templateDir}/meters.txt`;\n      if (!dirExists(templateDir)) {\n        throw Error(np.getI18n('NOW_PLAYING_ERR_VU_METER_TEMPLATE_NOT_FOUND', template));\n      }\n      if (!fileExists(configPath)) {\n        throw Error(np.getI18n('NOW_PLAYING_ERR_VU_METER_CONF_NOT_FOUND', template));\n      }\n      const config = new ConfigParser();\n      config.read(configPath);\n      if (config.sections().length === 0) {\n        throw Error(`No meters defined in ${template}`);\n      }\n      const meters = config.sections().reduce<VUMeter[]>((result, section) => {\n        const meterType = this.#getConfigProp(config, section, 'meter.type');\n        const channels = Number(this.#getConfigProp(config, section, 'channels'));\n        if (meterType !== 'linear' && meterType !== 'circular') {\n          throw Error(`Unknown meter type: ${meterType}`);\n        }\n        if (isNaN(channels) || (channels !== 1 && channels !== 2)) {\n          throw Error(`Invalid channels value: ${channels}`);\n        }\n        if (meterType === 'linear' && channels !== 2) {\n          throw Error(`Invalid channels value '${channels} for meter type '${meterType}'`);\n        }\n        const screenBackground = this.#getConfigProp(config, section, 'screen.bgr', null);\n        const foreground = this.#getConfigProp(config, section, 'fgr.filename', null);\n        const meterBase: VUMeterBase = {\n          template,\n          name: section,\n          type: meterType,\n          meter: {\n            x: Number(this.#getConfigProp(config, section, 'meter.x', 0)),\n            y: Number(this.#getConfigProp(config, section, 'meter.y', 0))\n          },\n          channels,\n          uiRefreshPeriod: Number(this.#getConfigProp(config, section, 'ui.refresh.period', 0.05)),\n          images: {\n            background: `${templateUrl}/${this.#getConfigProp(config, section, 'bgr.filename')}`,\n            foreground: foreground ? `${templateUrl}/${foreground}` : null,\n            indicator: `${templateUrl}/${this.#getConfigProp(config, section, 'indicator.filename')}`,\n            screenBackground: screenBackground ? `${templateUrl}/${screenBackground}` : null\n          }\n        };\n        let meter: VUMeter | null = null;\n        if (meterType === 'linear') {\n          const directionValue = this.#getConfigProp(config, section, 'direction', null);\n          let direction: VUMeterLinear['direction'];\n          switch (directionValue) {\n            case 'bottom-top':\n            case 'top-bottom':\n            case 'center-edges':\n            case 'edges-center':\n              direction = directionValue;\n              break;\n            default:\n              direction = 'left-right';\n          }\n          const flipLeftX = this.#getConfigProp(config, section, 'flip.left.x', null);\n          const flipRightX = this.#getConfigProp(config, section, 'flip.right.x', null);\n          meter = {\n            ...meterBase,\n            type: 'linear',\n            channels: 2,\n            left: {\n              x: Number(this.#getConfigProp(config, section, 'left.x')),\n              y: Number(this.#getConfigProp(config, section, 'left.y'))\n            },\n            right: {\n              x: Number(this.#getConfigProp(config, section, 'right.x')),\n              y: Number(this.#getConfigProp(config, section, 'right.y'))\n            },\n            position: {\n              regular: Number(this.#getConfigProp(config, section, 'position.regular')),\n              overload: Number(this.#getConfigProp(config, section, 'position.overload', 0))\n            },\n            stepWidth: {\n              regular: Number(this.#getConfigProp(config, section, 'step.width.regular')),\n              overload: Number(this.#getConfigProp(config, section, 'step.width.overload', 0))\n            },\n            direction,\n            flipLeft: {\n              x: flipLeftX === 'True'\n            },\n            flipRight: {\n              x: flipRightX === 'True'\n            }\n          };\n          const indicatorType = this.#getConfigProp(config, section, 'indicator.type', null);\n          if (indicatorType === 'single') {\n            meter.indicatorType = indicatorType;\n          }\n        }\n        else if (meterType === 'circular') {\n          const circularMeterBase: VUMeterCircularBase = {\n            ...meterBase,\n            type: 'circular',\n            stepsPerDegree: Number(this.#getConfigProp(config, section, 'steps.per.degree')),\n            distance: Number(this.#getConfigProp(config, section, 'distance'))\n          };\n          if (channels === 1) {\n            meter = {\n              ...circularMeterBase,\n              channels: 1,\n              monoOrigin: {\n                x: Number(this.#getConfigProp(config, section, 'mono.origin.x')),\n                y: Number(this.#getConfigProp(config, section, 'mono.origin.y'))\n              },\n              angle: {\n                start: Number(this.#getConfigProp(config, section, 'start.angle')),\n                stop: Number(this.#getConfigProp(config, section, 'stop.angle'))\n              }\n            };\n          }\n          else {\n            const startAngle = this.#getConfigProp(config, section, 'start.angle', null);\n            const stopAngle = this.#getConfigProp(config, section, 'stop.angle', null);\n            let angle: VUMeterCircularStereo['angle'];\n            if (startAngle !== null && stopAngle !== null) {\n              angle = {\n                leftStart: Number(startAngle),\n                rightStart: Number(startAngle),\n                leftStop: Number(stopAngle),\n                rightStop: Number(stopAngle)\n              };\n            }\n            else {\n              angle = {\n                leftStart: Number(this.#getConfigProp(config, section, 'left.start.angle')),\n                leftStop: Number(this.#getConfigProp(config, section, 'left.stop.angle')),\n                rightStart: Number(this.#getConfigProp(config, section, 'right.start.angle')),\n                rightStop: Number(this.#getConfigProp(config, section, 'right.stop.angle'))\n              };\n            }\n            meter = {\n              ...circularMeterBase,\n              channels: 2,\n              leftOrigin: {\n                x: Number(this.#getConfigProp(config, section, 'left.origin.x')),\n                y: Number(this.#getConfigProp(config, section, 'left.origin.y'))\n              },\n              rightOrigin: {\n                x: Number(this.#getConfigProp(config, section, 'right.origin.x')),\n                y: Number(this.#getConfigProp(config, section, 'right.origin.y'))\n              },\n              angle\n            };\n          }\n        }\n\n        if (meter) {\n          result.push(this.#parseExtendedConfig(config, section, meter));\n        }\n\n        return result;\n      }, []);\n\n      meters.sort((m1, m2) => m1.name.localeCompare(m2.name));\n\n      return {\n        meters\n      };\n    }\n    catch (error: any) {\n      np.getLogger().error(np.getErrorMessage(`[now-playing] Failed to get config for VU template ${template}:`, error, true));\n      return {\n        error: np.getErrorMessage(np.getI18n('NOW_PLAYING_ERR_VU_METER_PROCESS_TEMPLATE'), error, false)\n      };\n    }\n  }\n\n  static #parseExtendedConfig(config: ConfigParser, section: string, baseConfig: VUMeter): VUMeter | VUMeterExtended {\n    const extend = this.#getConfigProp(config, section, 'config.extend', null);\n    if (extend !== 'True') {\n      return baseConfig;\n    }\n\n    let albumart: VUMeterExtended['albumart'] = null;\n    const albumartPos = this.#parsePosition(config, section, 'albumart.pos');\n    const albumartSize = this.#parseSize(config, section, 'albumart.dimension');\n    if (albumartPos && albumartSize) {\n      const borderWidth = this.#getConfigProp(config, section, 'albumart.border', null);\n      let border = null;\n      if (borderWidth && Number(borderWidth) > 0) {\n        border = {\n          width: Number(borderWidth)\n        };\n      }\n      albumart = {\n        position: albumartPos,\n        size: albumartSize,\n        border\n      };\n    }\n\n    const playInfoMaxWidth = Number(this.#getConfigProp(config, section, 'playinfo.maxwidth', null));\n    const playInfoTitle = this.#parsePlayInfoTextElement(config, section, 'playinfo.title.pos', 'bold');\n    const playInfoArtist = this.#parsePlayInfoTextElement(config, section, 'playinfo.artist.pos', 'light');\n    const playInfoAlbum = this.#parsePlayInfoTextElement(config, section, 'playinfo.album.pos', 'light');\n    const playInfoSampleRate = this.#parsePlayInfoTextElement(config, section, 'playinfo.samplerate.pos', 'bold');\n    let playInfo: VUMeterExtended['playInfo'] = null;\n    if (playInfoMaxWidth && (playInfoTitle || playInfoArtist || playInfoAlbum || playInfoSampleRate)) {\n      const playInfoCenter = this.#getConfigProp(config, section, 'playinfo.center', null) === 'True';\n      const trackTypePosition = this.#parsePosition(config, section, 'playinfo.type.pos');\n      const trackTypeSize = this.#parseSize(config, section, 'playinfo.type.dimension');\n      let trackType = null;\n      if (trackTypePosition && trackTypeSize) {\n        trackType = {\n          position: trackTypePosition,\n          color: this.#parseColor(config, section, 'playinfo.type.color'),\n          size: trackTypeSize\n        };\n      }\n      playInfo = {\n        title: playInfoTitle,\n        artist: playInfoArtist,\n        album: playInfoAlbum,\n        sampleRate: playInfoSampleRate,\n        center: playInfoCenter,\n        maxWidth: playInfoMaxWidth,\n        trackType\n      };\n    }\n\n    const timeRemainingPos = this.#parsePosition(config, section, 'time.remaining.pos');\n    let timeRemaining: VUMeterExtended['timeRemaining'] = null;\n    if (timeRemainingPos) {\n      timeRemaining = {\n        position: timeRemainingPos,\n        color: this.#parseColor(config, section, 'time.remaining.color')\n      };\n    }\n\n    const { appUrl } = getPluginInfo();\n    const font: VUMeterExtended['font'] = {\n      url: {\n        light: `${appUrl}/sys_asset/font/${DEFAULT_FONTS.light}`,\n        regular: `${appUrl}/sys_asset/font/${DEFAULT_FONTS.regular}`,\n        bold: `${appUrl}/sys_asset/font/${DEFAULT_FONTS.bold}`,\n        digi: `${appUrl}/assets/vumeter-fonts/DSEG7Classic-Italic.ttf`\n      },\n      size: {\n        light: Number(this.#getConfigProp(config, section, 'font.size.light', null)) || 30,\n        regular: Number(this.#getConfigProp(config, section, 'font.size.regular', null)) || 35,\n        bold: Number(this.#getConfigProp(config, section, 'font.size.bold', null)) || 40,\n        digi: Number(this.#getConfigProp(config, section, 'font.size.digi', null)) || 40\n      },\n      color: this.#parseColor(config, section, 'font.color')\n    };\n\n    return {\n      ...baseConfig,\n      extend: true,\n      albumart,\n      playInfo,\n      timeRemaining,\n      font\n    };\n  }\n\n  static #parsePosition(config: ConfigParser, section: string, prop: string) {\n    const pos = this.#getConfigProp(config, section, prop, null);\n    const [ x, y ] = pos?.split(',').map((s) => Number(s)) || [ NaN, NaN ];\n    if (!isNaN(x) && !isNaN(y)) {\n      return {\n        x, y\n      };\n    }\n    return null;\n  }\n\n  static #parseSize(config: ConfigParser, section: string, prop: string) {\n    const size = this.#getConfigProp(config, section, prop, null);\n    const [ w, h ] = size?.split(',').map((s) => Number(s)) || [ NaN, NaN ];\n    if (!isNaN(w) && !isNaN(h)) {\n      return {\n        width: w,\n        height: h\n      };\n    }\n    return null;\n  }\n\n  // https://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb\n  static #rgbToHex(r: number, g: number, b: number) {\n    return `#${[ r, g, b ].map((x) => {\n      const hex = x.toString(16);\n      return hex.length === 1 ? `0${hex}` : hex;\n    }).join('')}`;\n  }\n\n  static #parseColor(config: ConfigParser, section: string, prop: string, defaultColor = '#ffffff') {\n    const color = this.#getConfigProp(config, section, prop, null); // Expects 'r,g,b'\n    const [ r, g, b ] = color?.split(',').map((s) => Number(s)) || [];\n    if (!isNaN(r) && !isNaN(g) && !isNaN(b)) {\n      return this.#rgbToHex(r, g, b);\n    }\n    return defaultColor;\n  }\n\n  static #parsePlayInfoTextElement(config: ConfigParser, section: string, prop: string, defaultStyle: VUMeterPlayInfoTextElement['style']) {\n    const pos = this.#getConfigProp(config, section, prop, null);\n    const parts = pos?.split(',') || [];\n    const x = Number(parts[0]);\n    const y = Number(parts[1]);\n    if (!isNaN(x) && !isNaN(y)) {\n      const _style = parts[2];\n      let style = defaultStyle;\n      if (_style) {\n        switch (_style.trim()) {\n          case 'bold':\n            style = 'bold';\n            break;\n          case 'regular':\n            style = 'regular';\n            break;\n          case 'light':\n            style = 'light';\n            break;\n        }\n      }\n      return {\n        position: {\n          x,\n          y\n        },\n        style\n      };\n    }\n    return null;\n  }\n\n  static #getConfigProp(config: ConfigParser, section: string, key: string, defaultValue?: undefined): string;\n  static #getConfigProp<T>(config: ConfigParser, section: string, key: string, defaultValue: T): T | string;\n  static #getConfigProp<T>(config: ConfigParser, section: string, key: string, defaultValue?: T): T | string {\n    const value = config.get(section, key);\n    if (value !== undefined) {\n      return value;\n    }\n    if (defaultValue !== undefined) {\n      return defaultValue;\n    }\n    throw Error(`VU config has no value for ${section}:${key}`);\n  }\n}\n"]}