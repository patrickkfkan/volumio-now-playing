{"version":3,"file":"VUMeterTemplateMonitor.js","sourceRoot":"","sources":["../../../src/lib/utils/VUMeterTemplateMonitor.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAA,gDAAwB;AACxB,6EAAsC;AACtC,4DAAoC;AAEpC,gFAAwD;AAE3C,QAAA,sBAAsB,GAAG,oDAAoD,CAAC;AAE3F,MAAM,sBAAuB,SAAQ,mBAAS;IAO5C;QACE,KAAK,CAAC,8BAAsB,CAAC,CAAC;;QANhC,SAAI,GAAG,wBAAwB,CAAC;QAEhC,oDAAqD;QACrD,mDAAmB;QAIjB,uBAAA,IAAI,qCAAc,EAAE,MAAA,CAAC;QACrB,uBAAA,IAAI,oCAAa,KAAK,MAAA,CAAC;IACzB,CAAC;IAED,YAAY;QACV,IAAI,IAAI,CAAC,MAAM,KAAK,SAAS,EAAE;YAC7B,2BAAE,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,kFAAkF,CAAC,CAAC;YACxG,OAAO,EAAE,CAAC;SACX;QACD,IAAI,CAAC,uBAAA,IAAI,wCAAU,EAAE;YACnB,uBAAA,IAAI,gFAAe,MAAnB,IAAI,CAAiB,CAAC;SACvB;QACD,OAAO,uBAAA,IAAI,yCAAW,CAAC;IACzB,CAAC;IAED,KAAK,CAAC,IAAI;QACR,KAAK,CAAC,IAAI,EAAE,CAAC;QACb,uBAAA,IAAI,qCAAc,EAAE,MAAA,CAAC;QACrB,uBAAA,IAAI,oCAAa,KAAK,MAAA,CAAC;IACzB,CAAC;IAES,WAAW,CAAC,KAAgD,EAAE,KAAa;QACnF,IAAI,KAAK,KAAK,QAAQ,IAAI,KAAK,KAAK,WAAW,EAAE;YAC/C,OAAQ;SACT;QACD,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,GAAG,cAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAE7C,2BAAE,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,kDAAkD,KAAK,MAAM,QAAQ,EAAE,CAAC,CAAC;QAE7F,QAAQ,KAAK,EAAE;YACb,KAAK,QAAQ;gBACX,MAAM,MAAM,GAAG,6BAAmB,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;gBACvD,IAAI,MAAM,CAAC,MAAM,EAAE;oBACjB,uBAAA,IAAI,yCAAW,CAAC,IAAI,CAAC;wBACnB,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,MAAM,CAAC,MAAM;qBACtB,CAAC,CAAC;iBACJ;gBACD,uBAAA,IAAI,oCAAa,KAAK,MAAA,CAAC;gBACvB,MAAM;YACR,KAAK,WAAW;gBACd,MAAM,KAAK,GAAG,uBAAA,IAAI,yCAAW,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,QAAQ,CAAC,CAAC;gBACpE,IAAI,KAAK,IAAI,CAAC,EAAE;oBACd,uBAAA,IAAI,yCAAW,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;iBAClC;gBACD,MAAM;YACR,QAAQ;SACT;IACH,CAAC;CAMF;;IAHG,uBAAA,IAAI,yCAAW,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;IACjE,uBAAA,IAAI,oCAAa,IAAI,MAAA,CAAC;AACxB,CAAC;AAGH,MAAM,sBAAsB,GAAG,IAAI,sBAAsB,EAAE,CAAC;AAE5D,kBAAe,sBAAsB,CAAC","sourcesContent":["import path from 'path';\nimport np from '../NowPlayingContext';\nimport FSMonitor from './FSMonitor';\nimport { VUMeter } from 'now-playing-common';\nimport VUMeterConfigParser from './VUMeterConfigParser';\n\nexport const VU_METER_TEMPLATE_PATH = '/data/INTERNAL/NowPlayingPlugin/VU Meter Templates';\n\nclass VUMeterTemplateMonitor extends FSMonitor {\n\n  name = 'VUMeterTemplateMonitor';\n\n  #templates: Array<{name: string; meters: VUMeter[]}>;\n  #isSorted: boolean;\n\n  constructor() {\n    super(VU_METER_TEMPLATE_PATH);\n    this.#templates = [];\n    this.#isSorted = false;\n  }\n\n  getTemplates() {\n    if (this.status !== 'running') {\n      np.getLogger().warn('[now-playing] VUMeterTemplateMonitor is not running. Returning empty image list.');\n      return [];\n    }\n    if (!this.#isSorted) {\n      this.#sortTemplates();\n    }\n    return this.#templates;\n  }\n\n  async stop() {\n    super.stop();\n    this.#templates = [];\n    this.#isSorted = false;\n  }\n\n  protected handleEvent(event: 'add' | 'unlink' | 'addDir' | 'unlinkDir', _path: string): void {\n    if (event !== 'addDir' && event !== 'unlinkDir') {\n      return ;\n    }\n    const { base: template } = path.parse(_path);\n\n    np.getLogger().info(`[now-playing] VUMeterTemplateMonitor captured '${event}': ${template}`);\n\n    switch (event) {\n      case 'addDir':\n        const config = VUMeterConfigParser.getConfig(template);\n        if (config.meters) {\n          this.#templates.push({\n            name: template,\n            meters: config.meters\n          });\n        }\n        this.#isSorted = false;\n        break;\n      case 'unlinkDir':\n        const index = this.#templates.findIndex((t) => t.name === template);\n        if (index >= 0) {\n          this.#templates.splice(index, 1);\n        }\n        break;\n      default:\n    }\n  }\n\n  #sortTemplates() {\n    this.#templates.sort((t1, t2) => t1.name.localeCompare(t2.name));\n    this.#isSorted = true;\n  }\n}\n\nconst vuMeterTemplateMonitor = new VUMeterTemplateMonitor();\n\nexport default vuMeterTemplateMonitor;\n"]}