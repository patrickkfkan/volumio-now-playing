{"version":3,"file":"Proxy.js","sourceRoot":"","sources":["../../../src/lib/utils/Proxy.ts"],"names":[],"mappings":";;;;;;AACA,4DAA+B;AAC/B,+BAAiC;AACjC,mCAAkC;AAClC,6EAAsC;AAE/B,KAAK,UAAU,YAAY,CAAC,GAAW,EAAE,GAAqB;IACnE,2BAAE,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,gCAAgC,GAAG,EAAE,CAAC,CAAC;IAC3D,MAAM,cAAc,GAAG,IAAA,gBAAS,EAAC,iBAAQ,CAAC,CAAC;IAC3C,IAAI;QACF,MAAM,QAAQ,GAAG,MAAM,IAAA,oBAAK,EAAC,GAAG,CAAC,CAAC;QAClC,IAAI,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE;YAClC,OAAO,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;SAClC;QACD,MAAM,cAAc,CAAC,QAAQ,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;KAC1C;IACD,OAAO,KAAK,EAAE;QACZ,2BAAE,CAAC,SAAS,EAAE,CAAC,KAAK,CAAC,2BAAE,CAAC,eAAe,CAAC,4BAA4B,EAAE,KAAK,CAAC,CAAC,CAAC;QAC9E,OAAO,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KACtB;AACH,CAAC;AAdD,oCAcC","sourcesContent":["import express from 'express';\nimport fetch from 'node-fetch';\nimport { promisify } from 'util';\nimport { pipeline } from 'stream';\nimport np from '../NowPlayingContext';\n\nexport async function proxyRequest(url: string, res: express.Response) {\n  np.getLogger().info(`[now-playing] Proxy request: ${url}`);\n  const streamPipeline = promisify(pipeline);\n  try {\n    const response = await fetch(url);\n    if (!response.ok || !response.body) {\n      return res.send(response.status);\n    }\n    await streamPipeline(response.body, res);\n  }\n  catch (error) {\n    np.getLogger().error(np.getErrorMessage('[now-playing] Proxy error:', error));\n    return res.send(500);\n  }\n}\n"]}