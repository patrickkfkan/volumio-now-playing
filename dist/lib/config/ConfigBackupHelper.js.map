{"version":3,"file":"ConfigBackupHelper.js","sourceRoot":"","sources":["../../../src/lib/config/ConfigBackupHelper.ts"],"names":[],"mappings":"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","sourcesContent":["// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nimport vconf from 'v-conf';\nimport isValidFilename from 'valid-filename';\nimport fs from 'fs';\nimport * as SystemUtils from '../utils/System';\nimport np from '../NowPlayingContext';\nimport path from 'path';\nimport ConfigUpdater from './ConfigUpdater';\n\nconst CONFIG_BACKUPS_PATH = '/data/INTERNAL/NowPlayingPlugin/Settings Backups';\nconst VCONF = new vconf();\n\nexport default class ConfigBackupHelper {\n\n  static async getBackupNames(): Promise<string[]> {\n    if (!SystemUtils.dirExists(CONFIG_BACKUPS_PATH)) {\n      return [];\n    }\n    const files = SystemUtils.readdir(CONFIG_BACKUPS_PATH);\n    const validated = (await Promise.all(files.map((filename) => this.#validateBackup(filename))))\n      .reduce<string[]>((result, validateResult) => {\n        if (validateResult.isValid) {\n          result.push(validateResult.backupName);\n        }\n        return result;\n      }, []);\n\n    try {\n      const stats = (await Promise.all(validated.map((backupName) => this.#getModifiedTime(backupName))));\n      const sorted = stats.sort((bak1, bak2) => bak2.modified - bak1.modified);\n      return sorted.map((s) => s.backupName);\n    }\n    catch (error: any) {\n      np.getLogger().warn(np.getErrorMessage('[now-playing] Unable to get stats of backup files:', error, true));\n      return validated;\n    }\n  }\n\n  static createBackup(backupName: string) {\n    const configFilePath = np.getConfigFilePath();\n    if (!configFilePath || !SystemUtils.fileExists(configFilePath)) {\n      throw Error(`${configFilePath} does not exist`);\n    }\n    if (!isValidFilename(backupName)) {\n      throw Error(`Invalid backup name '${backupName}`);\n    }\n    const dest = this.#getPathToBackupFile(backupName);\n    if (path.parse(dest).dir !== CONFIG_BACKUPS_PATH) {\n      throw Error('Illegal attempt to save in non-designated directory');\n    }\n    SystemUtils.copyFile(configFilePath, dest, { createDestDirIfNotExists: true });\n  }\n\n  static deleteBackup(backupName: string) {\n    const dest = this.#getPathToBackupFile(backupName);\n    if (!fs.existsSync(dest)) {\n      return;\n    }\n    fs.unlinkSync(dest);\n  }\n\n  static async replacePluginConfigWithBackup(backupName: string) {\n    const src = this.#getPathToBackupFile(backupName);\n    if (!SystemUtils.fileExists(src)) {\n      throw Error(`${src} does not exist`);\n    }\n    const validateResult = await this.#validateBackup(backupName);\n    if (!validateResult.isValid) {\n      throw Error(`Invalid backup '${backupName}'`);\n    }\n    const dest = np.getConfigFilePath() ? path.resolve(np.getConfigFilePath()) : null;\n    const destDir = dest ? path.parse(dest).dir : null;\n    if (!dest || !destDir || !SystemUtils.dirExists(destDir)) {\n      throw Error(`Destination directory ${destDir} does not exist`);\n    }\n    try {\n      SystemUtils.copyFile(src, dest);\n    }\n    catch (error) {\n      throw Error(`Failed to copy ${src} to ${dest}`);\n    }\n    await ConfigUpdater.checkAndUpdate();\n  }\n\n  static #getPathToBackupFile(backupName: string) {\n    return path.resolve(`${CONFIG_BACKUPS_PATH}/${backupName}`);\n  }\n\n  static #validateBackup(filename: string): Promise<{ backupName: string; isValid: boolean; }> {\n    const pathToFile = path.resolve(`${CONFIG_BACKUPS_PATH}/${filename}`);\n    return new Promise((resolve) => {\n      VCONF.loadFile(pathToFile, (err: any, data: any) => {\n        if (err || !data) {\n          np.getLogger().error(np.getErrorMessage(`[now-playing] Failed to validate config backup file ${pathToFile}`, err, false));\n          resolve({\n            backupName: filename,\n            isValid: false\n          });\n          return;\n        }\n\n        if (VCONF.has('configVersion')) {\n          resolve({\n            backupName: filename,\n            isValid: true\n          });\n        }\n        else {\n          np.getLogger().error(`[now-playing] Incompatible config backup file ${pathToFile}: 'configVersion' required but missing from data`);\n          resolve({\n            backupName: filename,\n            isValid: false\n          });\n        }\n      });\n    });\n  }\n\n  static #getModifiedTime(backupName: string): Promise<{ backupName: string; modified: number; }> {\n    const pathToFile = this.#getPathToBackupFile(backupName);\n    return new Promise((resolve, reject) => {\n      void (async () => {\n        try {\n          const stat = await fs.promises.stat(pathToFile);\n          resolve({\n            backupName,\n            modified: stat.mtime.getTime()\n          });\n        }\n        catch (error: unknown) {\n          reject(error instanceof Error ? error : Error(String(error)));\n        }\n      })();\n    });\n  }\n}\n"]}