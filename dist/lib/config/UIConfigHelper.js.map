{"version":3,"file":"UIConfigHelper.js","sourceRoot":"","sources":["../../../src/lib/config/UIConfigHelper.ts"],"names":[],"mappings":"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","sourcesContent":["import { type ObservedUIConfig, type ObservedUIConfigSection, type ObservedUIConfigSectionContent, type UIConfig, type UIConfigSection } from './UIConfig';\nimport { type UIConfigSectionKey } from './UIConfigSchema';\n\nexport default class UIConfigHelper {\n\n  static observe(data: UIConfig): ObservedUIConfig {\n    const observedSections: Record<string | symbol, any> = {};\n    return new Proxy(data, {\n      get: (target, prop) => {\n        if (observedSections[prop]) {\n          return observedSections[prop];\n        }\n        const section = target.sections.find((s) => s.id === prop);\n        if (section) {\n          const observed = this.#observeSection(section);\n          observedSections[prop] = observed;\n          return observed;\n        }\n\n        return Reflect.get(target, prop);\n      },\n      set: (target, prop, value) => {\n        if (observedSections[prop]) {\n          delete observedSections[prop];\n        }\n        return Reflect.set(target, prop, value);\n      },\n      deleteProperty: (target, prop) => {\n        if (observedSections[prop]) {\n          delete observedSections[prop];\n        }\n        return Reflect.deleteProperty(target, prop);\n      }\n    }) as ObservedUIConfig;\n  }\n\n  static #observeSection<K extends UIConfigSectionKey>(data: UIConfigSection<K>): ObservedUIConfigSection<K> {\n    if (!data.content) {\n      data.content = [];\n    }\n    let observedContent = this.#observeSectionContent(data.content);\n    return new Proxy(data, {\n      get: (target, prop) => {\n        if (prop === 'content') {\n          return observedContent;\n        }\n\n        return Reflect.get(target, prop);\n      },\n      set: (target, prop, value) => {\n        if (prop === 'content') {\n          observedContent = this.#observeSectionContent(value);\n        }\n        return Reflect.set(target, prop, value);\n      }\n    }) as ObservedUIConfigSection<K>;\n  }\n\n  static #observeSectionContent<K extends UIConfigSectionKey>(data: NonNullable<UIConfigSection<K>['content']>): ObservedUIConfigSectionContent<K> {\n    return new Proxy(data, {\n      get: (target, prop) => {\n        return data.find((c) => c.id === prop) || Reflect.get(target, prop);\n      }\n    }) as ObservedUIConfigSectionContent<K>;\n  }\n\n  static sanitizeNumberInput(value: any): number | '' {\n    if (typeof value === 'number') {\n      return value;\n    }\n    if (value === null || value === undefined || value === '') {\n      return '';\n    }\n    return Number(value) || '';\n  }\n}\n"]}